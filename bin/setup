#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH
env_dir="${OPENSHIFT_RUBY_DIR}/env"
orig_path=$PATH

case "$1" in
  -v|--version)
    version="$2"
esac

# Parse arguments
source "${OPENSHIFT_RUBY_DIR}/lib/util"
parse_args $@

# RVM / PASSENGER
rvm use $version
PASSENGER_MODULE=$(passenger-install-apache2-module --snippet | grep LoadModule | awk '{print $3;}')
set_env_var 'PASSENGER_MODULE' $PASSENGER_MODULE $env_dir
PASSENGER_ROOT=$(passenger-install-apache2-module --snippet | grep PassengerRoot | cut -f2 | awk '{print $2;}')
set_env_var 'PASSENGER_ROOT' $PASSENGER_ROOT $env_dir
PASSENGER_RUBY=$(passenger-install-apache2-module --snippet | grep PassengerDefaultRuby | cut -f2 | awk '{print $2;}')
set_env_var 'PASSENGER_RUBY' $(which ruby)-openshift $env_dir
rvm user gemsets
rvm use $version --passenger
export PATH=${OPENSHIFT_HOMEDIR}.gem/bin:$PATH
export GEM_HOME=${OPENSHIFT_HOMEDIR}.gem
gem install bundler rake rack
#real_version=$(ruby -e 'print "#{RUBY_VERSION}-p#{RUBY_PATCHLEVEL}"')
set_env_var 'RUBY_ENVIRONMENT' ${OPENSHIFT_HOMEDIR}.gem/environment $env_dir
echo ${PATH%:$orig_path} > $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT
echo $version > $OPENSHIFT_HOMEDIR/.ruby-version
rvm rvmrc warning ignore all.rvmrcs

# Copy the version specific files to ruby directory
shopt -s dotglob
for dir in etc; do
    mkdir -p $OPENSHIFT_RUBY_DIR/$dir
    cp -Lr $OPENSHIFT_RUBY_DIR/versions/$version/$dir/* $OPENSHIFT_RUBY_DIR/$dir
done

# Create/truncate Apache PassEnv configuration file
echo > $OPENSHIFT_RUBY_DIR/etc/conf.d/passenv.conf

echo > $OPENSHIFT_RUBY_DIR/etc/conf.d/server-status.conf

# Standard ENV var for the SECRET > rails 4.0
set_env_var 'SECRET_KEY_BASE' $OPENSHIFT_SECRET_TOKEN $env_dir

#if [ $version == '1.9' ]; then
#    # Cleanup from version 0.0.1
#    env_dir="${OPENSHIFT_RUBY_DIR}/env"
#    [ -f $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT ] && rm -f $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT
#    [ -f $OPENSHIFT_RUBY_DIR/env/LD_LIBRARY_PATH ] && rm -f $OPENSHIFT_RUBY_DIR/env/LD_LIBRARY_PATH
#    [ -f $OPENSHIFT_RUBY_DIR/env/MANPATH ] && rm -f $OPENSHIFT_RUBY_DIR/env/MANPATH
#
#    dirname $(scl enable ruby193 "which ruby")    > $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT
#
#    ld_path=$(LD_LIBRARY_PATH="" scl enable ruby193 "printenv LD_LIBRARY_PATH")
#    set_env_var 'OPENSHIFT_RUBY_LD_LIBRARY_PATH_ELEMENT' $ld_path $env_dir
#    scl enable ruby193 "printenv MANPATH"         > $OPENSHIFT_RUBY_DIR/env/MANPATH
#
#fi

#if [ $version == '2.0' ]; then
#    env_dir="${OPENSHIFT_RUBY_DIR}/env"
#
#    [ -f $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT ] && rm -f $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT
#    [ -f $OPENSHIFT_RUBY_DIR/env/LD_LIBRARY_PATH ] && rm -f $OPENSHIFT_RUBY_DIR/env/LD_LIBRARY_PATH
#    [ -f $OPENSHIFT_RUBY_DIR/env/MANPATH ] && rm -f $OPENSHIFT_RUBY_DIR/env/MANPATH
#
#    dirname $(scl enable ruby200 ror40 "which ruby")    > $OPENSHIFT_RUBY_DIR/env/OPENSHIFT_RUBY_PATH_ELEMENT
#
#    ld_path=$(LD_LIBRARY_PATH="" scl enable ruby200 ror40 "printenv LD_LIBRARY_PATH")
#    set_env_var 'OPENSHIFT_RUBY_LD_LIBRARY_PATH_ELEMENT' $ld_path $env_dir
#    # Standard ENV var for the SECRET > rails 4.0
#    set_env_var 'SECRET_KEY_BASE' $OPENSHIFT_SECRET_TOKEN $env_dir
#    scl enable ruby200 ror40 "printenv MANPATH"         > $OPENSHIFT_RUBY_DIR/env/MANPATH
#
#
#fi

cp versions/shared/etc/conf.d/performance.conf.erb conf/performance.conf.erb
cp conf/performance.conf.erb conf/performance.conf.erb.hidden
